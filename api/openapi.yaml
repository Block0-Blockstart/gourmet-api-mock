openapi: 3.0.3
info:
  title: Swagger Gourmet - OpenAPI 3.0
  description: This is a simple contract for the Blockstart Interreg POC for Gourmet.  This
    contract allow to interract with the blockchain.
  contact:
    email: daniel@block0.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
- url: /
tags:
- name: batch
  description: Everything about the gourmet batches
  externalDocs:
    description: Find out more
    url: http://swagger.io
paths:
  /batch:
    post:
      tags:
      - batch
      summary: Add a new batch onto the BC (mint a nft)
      description: Add a new batch onto the BC (mint a nft)
      operationId: addBatch
      requestBody:
        description: Create a new batch NFT
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch'
          application/xml:
            schema:
              $ref: '#/components/schemas/Batch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Batch'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nft'
            application/xml:
              schema:
                $ref: '#/components/schemas/Nft'
        "405":
          description: Invalid input
      x-swagger-router-controller: Batch
  /batch/{batchId}:
    get:
      tags:
      - batch
      summary: Find batch by ID
      description: Returns a single batch Nft
      operationId: getBatchById
      parameters:
      - name: batchId
        in: path
        description: ID of batch to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nft'
            application/xml:
              schema:
                $ref: '#/components/schemas/Nft'
        "400":
          description: Invalid ID supplied
        "404":
          description: Batch not found
      x-swagger-router-controller: Batch
components:
  schemas:
    Batch:
      required:
      - id
      - links
      type: object
      properties:
        id:
          type: integer
          format: int64
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        files:
          type: array
          items:
            $ref: '#/components/schemas/File'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
      example:
        files:
        - name: name
          hash: hash
        - name: name
          hash: hash
        links:
        - name: name
          url: url
        - name: name
          url: url
        id: 0
        fields:
        - name: name
          hash: hash
        - name: name
          hash: hash
      xml:
        name: batch
    Nft:
      required:
      - id
      - links
      type: object
      properties:
        batch:
          $ref: '#/components/schemas/Batch'
        token:
          $ref: '#/components/schemas/Token'
      example:
        batch:
          files:
          - name: name
            hash: hash
          - name: name
            hash: hash
          links:
          - name: name
            url: url
          - name: name
            url: url
          id: 0
          fields:
          - name: name
            hash: hash
          - name: name
            hash: hash
        token:
          tokenId: tokenId
          blockchain: polygon
          transactionHash: transactionHash
          network: Mumbai-Testnet
          tokenSmartContractAddress: tokenSmartContractAddress
      xml:
        name: nft
    Link:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
      example:
        name: name
        url: url
      xml:
        name: link
    File:
      type: object
      properties:
        name:
          type: string
        hash:
          type: string
      example:
        name: name
        hash: hash
      xml:
        name: file
    Field:
      type: object
      properties:
        name:
          type: string
        hash:
          type: string
      example:
        name: name
        hash: hash
      xml:
        name: field
    Token:
      type: object
      properties:
        blockchain:
          type: string
          enum:
          - polygon
        network:
          type: string
          enum:
          - Mumbai-Testnet
        transactionHash:
          type: string
        tokenSmartContractAddress:
          type: string
        tokenId:
          type: string
      example:
        tokenId: tokenId
        blockchain: polygon
        transactionHash: transactionHash
        network: Mumbai-Testnet
        tokenSmartContractAddress: tokenSmartContractAddress
      xml:
        name: token
